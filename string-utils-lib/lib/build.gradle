/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'  // Use this for a library project
    id 'maven-publish' // Use this for publishing
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example.string_utils'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use Spring Boot Starter for dependency management but without the executable application.
    implementation 'org.springframework.boot:spring-boot-starter:3.3.3'

    // Use JUnit test framework.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    // This dependency is exported to consumers, found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jar {
    enabled = true
    archiveBaseName = 'my-spring-boot-library'
    archiveVersion = version
}

test {
    useJUnitPlatform() // Enable JUnit 5 for testing
}